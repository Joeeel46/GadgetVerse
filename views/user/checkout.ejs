<%- include("../../views/partials/user/header") %>

    <style>
        .address-selection-wrapper {
            font-family: 'Inter', system-ui, -apple-system, sans-serif;
        }

        .address-card .address-radio {
            position: absolute;
            opacity: 0;
            cursor: pointer;
        }

        .address-card .address-check {
            display: none;
        }

        .address-card .address-radio:checked+label {
            border-color: #3b82f6;
            background-color: #f8faff;
        }

        .address-card .address-radio:checked+label .address-check {
            display: block;
        }

        .card.border-dashed {
            border: 2px dashed #e5e7eb;
            background-color: #f9fafb;
        }

        .badge.bg-primary-light {
            background-color: #eff6ff;
            padding: 0.5rem 1rem;
            font-weight: 500;
        }

        .transition-all {
            transition: all 0.2s ease-in-out;
        }

        .hover-shadow-sm:hover {
            box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
            transform: translateY(-2px);
        }

        .text-gray-500 {
            color: #6b7280;
        }

        .text-gray-600 {
            color: #4b5563;
        }

        .address-details p {
            line-height: 1.6;
        }
    </style>

    <div class="mobile-header-active mobile-header-wrapper-style">
        <div class="mobile-header-wrapper-inner">
            <div class="mobile-header-top">
                <div class="mobile-header-logo">
                    <a href="/"><img src="/evara-user/assets/imgs/theme/logo.svg" alt="logo"></a>
                </div>
                <div class="mobile-menu-close close-style-wrap close-style-position-inherit">
                    <button class="close-style search-close">
                        <i class="icon-top"></i>
                        <i class="icon-bottom"></i>
                    </button>
                </div>
            </div>
            <div class="mobile-header-content-area">
                <div class="mobile-search search-style-3 mobile-header-border">
                    <form action="#">
                        <input type="text" placeholder="Search for itemsâ€¦">
                        <button type="submit"><i class="fi-rs-search"></i></button>
                    </form>
                </div>
                <div class="mobile-menu-wrap mobile-header-border">

                    <!-- mobile menu start -->
                    <nav>
                        <ul class="mobile-menu">
                            <li class="menu-item-has-children"><a href="index.html">Home</a>
                            </li>
                            <li class="menu-item-has-children"><a href="shop-grid-right.html">Shop</a>
                            </li>
                        </ul>
                    </nav>
                    <!-- mobile menu end -->
                </div>
                <div class="mobile-header-info-wrap mobile-header-border">
                    <div class="single-mobile-header-info mt-30">
                        <a href="page-contact.html"> Our location </a>
                    </div>
                    <div class="single-mobile-header-info">
                        <a href="page-login-register.html">Log In / Sign Up </a>
                    </div>
                    <div class="single-mobile-header-info">
                        <a href="#">(+01) - 2345 - 6789 </a>
                    </div>
                </div>
                <div class="mobile-social-icon">
                    <h5 class="mb-15 text-grey-4">Follow Us</h5>
                    <a href="#"><img src="/evara-user/assets/imgs/theme/icons/icon-facebook.svg" alt=""></a>
                    <a href="#"><img src="/evara-user/assets/imgs/theme/icons/icon-twitter.svg" alt=""></a>
                    <a href="#"><img src="/evara-user/assets/imgs/theme/icons/icon-instagram.svg" alt=""></a>
                    <a href="#"><img src="/evara-user/assets/imgs/theme/icons/icon-pinterest.svg" alt=""></a>
                    <a href="#"><img src="/evara-user/assets/imgs/theme/icons/icon-youtube.svg" alt=""></a>
                </div>
            </div>
        </div>
    </div>
    <main class="main">
        <div class="page-header breadcrumb-wrap">
            <div class="container">
                <div class="breadcrumb">
                    <a href="/" >Home </a>
                    <span></span>
                    <a href="/cart"> Cart</a>
                    <span></span> Checkout
                </div>
            </div>
        </div>
        <section class="mt-50 mb-50">
            <div class="container">


                <div class="row">

                    <div class="address-selection-wrapper mb-4 col-md-6">
                        <!-- Header Section -->
                        <div class="section-header d-flex justify-content-between align-items-center mb-4">
                            <h4 class="mb-0 text-dark">
                                <i class="fi-rs-map-marker-home me-2"></i>
                                Select Delivery Address
                            </h4>
                            <a href="/addAddress" class="btn btn-sm btn-primary">
                                <i class="fi-rs-plus me-1"></i>
                                Add New Address
                            </a>
                        </div>

                        <!-- Address Cards Grid -->
                        <div class="address-cards-container">
                            <% if (addresses && addresses.length> 0) { %>
                                <div class="row g-3">
                                    <% addresses.forEach((address, i)=> { %>
                                        <div class="col-12">
                                            <div class="address-card position-relative">
                                                <input type="radio" name="selectedAddress" id="address-<%= i %>"
                                                    class="address-radio" value="<%= JSON.stringify(address) %>"
                                                    required
                                                    onclick="document.getElementById('address').value = '<%= address._id %>';">
                                                <label for="address-<%= i %>"
                                                    class="card h-100 border-2 transition-all hover-shadow-sm">
                                                    <div class="card-body p-4">
                                                        <div
                                                            class="d-flex justify-content-between align-items-start mb-3">
                                                            <div class="d-flex align-items-center gap-2">
                                                                <span class="badge bg-primary-light text-primary">
                                                                    <%= address.addressType %>
                                                                </span>
                                                                <h5 class="card-title mb-0 text-dark">
                                                                    <%= address.name %>
                                                                </h5>
                                                            </div>
                                                            <div class="address-check">
                                                                <i class="fi-rs-check-circle text-success fs-4"></i>
                                                            </div>
                                                        </div>

                                                        <div class="address-details text-gray-600">
                                                            <p class="mb-2">
                                                                <%= address.streetAddress %>
                                                            </p>
                                                            <p class="mb-2">
                                                                <%= address.city %>, <%= address.state %> - <%=
                                                                            address.pincode %>
                                                            </p>
                                                            <div class="d-flex align-items-center gap-2 text-gray-500">
                                                                <i class="fi-rs-phone-call"></i>
                                                                <span>
                                                                    <%= address.phone %>
                                                                </span>
                                                                <% if (address.altPhone) { %>
                                                                    <span class="mx-2">|</span>
                                                                    <span>
                                                                        <%= address.altPhone %>
                                                                    </span>
                                                                    <% } %>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </label>
                                            </div>
                                        </div>
                                        <% }); %>
                                </div>
                                <% } else { %>
                                    <div class="card border-dashed p-4 text-center">
                                        <div class="no-address-content">
                                            
                                            <h5 class="text-gray-600 mb-3">No Delivery Address Found</h5>
                                            <p class="text-gray-500 mb-4">Please add a delivery address to continue with
                                                checkout</p>
                                            
                                        </div>
                                    </div>
                                    <% } %>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="order_review">
                            <div class="mb-20">
                                <h4>Your Orders</h4>
                            </div>
                            <div class="table-responsive order_table text-center">


                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th colspan="2">Product</th>
                                            <th>Total</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% if (product) { %>
                                            <tr>
                                                <td class="image product-thumbnail">
                                                    <img src="/uploads/re-image/<%= product.productImage[0] %>"
                                                        alt="<%= product.productName %>">
                                                </td>
                                                <td>
                                                    <h5>
                                                        <%= product.productName %>
                                                    </h5>
                                                    <span>Units: <%= qty %></span>
                                                </td>
                                                <td>
                                                    <%= product.salePrice.toLocaleString() %>
                                                </td>
                                            </tr>
                                            <% } else if(carts && carts.items.length> 0) { %>
                                                <% carts.items.forEach(item=> { %>
                                                    <tr>
                                                        <td class="image product-thumbnail">
                                                            <img src="/uploads/re-image/<%= item.productId.productImage[0] %>"
                                                                alt="#">
                                                        </td>
                                                        <td>
                                                            <h5><a href="shop-product-full.html">
                                                                    <%= item.productId.productName %>
                                                                </a></h5>
                                                            <span class="product-qty">x <%= item.quantity %></span>
                                                        </td>
                                                        <td>â‚¹<%= item.totalPrice %>
                                                        </td>
                                                    </tr>
                                                    <% }); %>
                                                        <% } %>
                                                            <tr>
                                                                <th>SubTotal</th>
                                                                <td class="product-subtotal" colspan="2" id="SubTotal">â‚¹
                                                                    <%= totalPrice.toLocaleString()%>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <th>Coupon Discount</th>
                                                                <td colspan="2" id="discount">â‚¹ 0</td>

                                                            </tr>
                                                            <tr>
                                                                <th>Total</th>
                                                                <td colspan="2" class="product-subtotal" id="final">â‚¹
                                                                    <%=totalPrice.toLocaleString() %>
                                                                </td>
                                                            </tr>

                                    </tbody>
                                </table>
                            </div>
                            <div class="bt-1 border-color-1 mt-30 mb-30"></div>
                            <!-- Coupon Section -->
                            <div class="coupon-section">
                                <h5 class="mb-3">Apply Coupon</h5>
                                <div class="input-group">
                                    <input type="text" id="couponCode" name="couponCode" class="form-control"
                                        placeholder="Enter coupon code">
                                    <div class="input-group-append">
                                        <button id="applyCouponbtn" class="btn btn-success" type="button"
                                            onclick="applyCoupon()" style="display: inline-block;">
                                            Apply
                                        </button>
                                        <button id="removeCouponBtn" class="btn btn-danger" type="button"
                                            onclick="removeCoupon()" style="display: none;">
                                            Remove
                                        </button>
                                    </div>

                                </div><br>
                                <div>
                                    <a href="/couponlist" class="btn btn-success">Show Available coupons</a>
                                </div>
                            </div>
                            <div class="bt-1 border-color-1 mt-30 mb-30"></div>
                            <% if (totalPrice> 0) { %>
                                <form id="orderForm" onsubmit="return validateAddress('<%=totalPrice%>')">
                                    <div>
                                        <h4>Select Payment Method</h4><br>
                                        <div class="payment_option">
                                            <input type="hidden" name="discount" id="discounted">
                                            <input type="hidden" name="finalAmount" id="finalAmount"
                                                value="<%= totalPrice %>">
                                            <input type="hidden" name="couponCode" id="code" value="0">
                                            <div class="custome-radio" id="cod">
                                                <input class="form-check-input" required type="radio"
                                                    name="payment_option" id="exampleRadios3" value="COD"
                                                    <%=totalPrice>= 25000 ? 'disabled title="Available only for orders below 25,000"': '' %>>
                                                <label
                                                    class="form-check-label <%= totalPrice >= 25000 ? 'text-muted' : '' %>"
                                                    for="exampleRadios3">
                                                    COD
                                                </label>
                                                <% if (totalPrice>= 25000) { %>
                                                    <small class="text-danger d-block">Available only for orders below
                                                        â‚¹25,000</small>
                                                    <% } %>
                                            </div>
                                            <div class="custome-radio" id="wallet">
                                                <input class="form-check-input" required type="radio"
                                                    name="payment_option" id="exampleRadios6" value="Wallet"
                                                    <%=totalPrice > walletAmount ? 'disabled title="Insufficient fund"': '' %>>
                                                <label
                                                    class="form-check-label <%= totalPrice > walletAmount ? 'text-muted' : '' %>"
                                                    for="exampleRadios6">
                                                    Wallet
                                                </label>
                                                <% if (totalPrice> walletAmount) { %>
                                                    <small class="text-danger d-block">Insufficient fund in Wallet</small>
                                                    <% } %>
                                            </div>
                                            <div class="custome-radio">
                                                <input class="form-check-input" required type="radio"
                                                    name="payment_option" id="exampleRadios5" value="online">
                                                <label class="form-check-label"
                                                    for="exampleRadios5">Online(Razorpay)</label>
                                            </div>
                                        </div>
                                    </div>
                                    <% if (carts && carts.items.length> 0) { %>
                                        <% carts.items.forEach((item, index)=> { %>
                                            <input type="hidden" name="cartData[<%= index %>][productId]"
                                                value="<%= item.productId._id %>">
                                            <input type="hidden" name="cartData[<%= index %>][quantity]"
                                                value="<%= item.quantity %>">
                                            <% });%>
                                                Â Â Â Â <%}%>
                                                    <input type="hidden" name="cart"
                                                        value='<%= JSON.stringify(carts ? carts.items : []) %>'>
                                                    <input type="hidden" name="totalPrice" value="<%= totalPrice %>">
                                                    <% if (product) { %>
                                                        <input type="hidden" name="singleProduct"
                                                            value="<%= JSON.stringify(product) %>">
                                                        <input type="hidden" name="singleProductId"
                                                            value="<%= product._id %>">
                                                        <input type="hidden" name="singleProductQuantity"
                                                            value="<%= qty %>">
                                                        <% } %>
                                                            <input type="hidden" name="address" id="address" value="0">
                                                            <button type="submit" id="placeOrderButton"
                                                                class="btn btn-fill-out btn-block mt-30">Place
                                                                Order</button>
                                </form> 
                                <% } %>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script>

        if (performance.navigation.type === performance.navigation.TYPE_BACK_FORWARD) {
            window.location.reload();
        }

        async function applyCoupon(totalPrice) {
            let numericPrice = document.getElementById('final').innerText.replace(/â‚¹|,/g, '').trim();
            const couponValue = document.getElementById('couponCode').value;
            if (!couponValue) {
                Swal.fire({
                    icon: 'warning',
                    title: 'No Coupon Code',
                    text: 'Please enter a coupon code',
                    confirmButtonColor: '#39b4ac',
                });
                return;
            }


            try {
                const response = await fetch('/applyCoupon', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ couponCode: couponValue, totalPrice: numericPrice })
                });

                const data = await response.json();

                if (response.ok) {
                    document.getElementById('removeCouponBtn').style.display = 'inline-block';
                    document.getElementById('applyCouponbtn').style.display = 'none';

                    const originalSubtotal = parseFloat(numericPrice);
                    const newTotal = parseFloat(data.newSubtotal);
                    const discountAmount = parseFloat(data.discountAmount);


                    document.getElementById('discount').textContent = `â‚¹${discountAmount.toLocaleString()}`;
                    document.getElementById('final').textContent = `â‚¹${newTotal.toLocaleString()}`;

                    Swal.fire({
                        icon: 'success',
                        title: 'Coupon Applied',
                        text: `Discount applied: â‚¹${discountAmount.toLocaleString()} (Max: â‚¹${data.maxDiscount})`,
                        confirmButtonColor: '#39b4ac',
                    });
                } else if(response.status === 400){
                    Swal.fire({
                        icon: data.icon,
                        title: 'Coupon Failed',
                        text: data.message,
                        confirmButtonColor: '#39b4ac',
                    });
                }else{
                    Swal.fire({
                        icon: 'error',
                        title: 'Coupon Application Failed',
                        text: 'Failed to apply coupon',
                        confirmButtonColor: '#39b4ac',
                    });
                }
            } catch (error) {
                console.error('Error applying coupon:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Coupon Application Error',
                    text: 'An error occurred while applying the coupon.',
                    confirmButtonColor: '#39b4ac',
                });
            }
        }

        function updateDisplays({ subtotal, discount, final }) {
            const elements = {
                subtotal: document.getElementById('subtotalDisplay'),
                discount: document.getElementById('discountDisplay'),
                final: document.getElementById('finalTotalDisplay')
            };

            if (elements.subtotal) elements.subtotal.textContent = `â‚¹${subtotal.toLocaleString()}`;
            if (elements.discount) elements.discount.textContent = `â‚¹${discount.toLocaleString()}`;
            if (elements.final) elements.final.textContent = `â‚¹${final.toLocaleString()}`;
        }

        async function removeCoupon() {
            const totalPriceElement = document.getElementById('final').textContent.replace(/[^0-9.-]+/g, "");
            const discountRowElement = document.getElementById('discount').textContent.replace(/[^0-9.-]+/g, "");

            if (!totalPriceElement || !discountRowElement) {
                Swal.fire({
                    text: "Something went wrong. Please refresh the page and try again.",
                    icon: "error"
                });
                return;
            }

            let originalPrice = parseFloat(totalPriceElement);
            let discountRow = parseFloat(discountRowElement);

        

            if (isNaN(originalPrice) || isNaN(discountRow)) {
                Swal.fire({
                    text: "Invalid price or discount. Please refresh the page.",
                    icon: "error"
                });
                return;
            }

            try {
                const response = await fetch('/remove-coupon', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ originalPrice, discountRow })
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const result = await response.json();
                
                try {
                    if (result.success) {
                        document.getElementById('removeCouponBtn').style.display = 'none'


                        const newTotal = result.subtotal;
                        // console.log(newTotal)

                        document.getElementById('discount').textContent = "â‚¹0";
                        document.getElementById('final').textContent = `â‚¹${newTotal}`
                        document.getElementById('couponCode').value = '';

                        Swal.fire({
                            text: "Coupon removed successfully",
                            icon: "success"
                        })
                        .then(() => {
                            window.location.reload()
                        })

                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire({
                        text: "Failed to remove the coupon",
                        icon: "error"
                    });
                }

            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    text: "Failed to remove the coupon Code",
                    icon: "error"
                });
            }
        }

        document.getElementById('orderForm').addEventListener('submit', function(e) {
            e.preventDefault();
        });

        async function validateAddress(totalPrice, paymentMethod) {
            const addressRadioButtons = document.querySelectorAll('input[name="selectedAddress"]');
            const paymentOption = document.querySelector('input[name="payment_option"]:checked').value;

            const addressSelected = document.querySelector('input[name="selectedAddress"]:checked') !== null;

            if (!addressSelected) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Address Required',
                    text: 'Please select an address before proceeding.',
                    confirmButtonText: 'Okay',
                    confirmButtonColor: '#007bff',
                    backdrop: true,
                });
                return false;
            }

            const button = document.getElementById("placeOrderButton");
            button.disabled = true;

            setTimeout(() => {
                button.disabled = false;
            }, 5000);

            if (paymentOption === "online") { 
                startRazorpayPayment();
                return false;
            }else {
                handleNonRazorpayPayment(paymentOption);
                return false;
            }
            return true;
        }

        async function handleNonRazorpayPayment(paymentOption) {
            
        try {
            const finalAmount = Number(document.getElementById('final').innerText.replace('â‚¹', '').replace(',', ''));
            const totalPrice = document.getElementById('SubTotal').innerText.replace('â‚¹', '').replace(',', '');
            const discount = document.getElementById('discount').textContent.replace(/[^0-9.-]+/g, "");

            const formData = {
                selectedAddress: document.querySelector('input[name="selectedAddress"]:checked').value,
                payment_option: paymentOption,
                discount: discount,
                totalPrice: totalPrice,
                finalAmount: finalAmount,
                couponCode: document.getElementById('couponCode').value || null,
                cartData: document.querySelector('input[name="cart"]').value,
                singleProduct: document.querySelector('input[name="singleProduct"]')?.value || null,
                singleProductId: document.querySelector('input[name="singleProductId"]')?.value || null,
                singleProductQuantity: document.querySelector('input[name="singleProductQuantity"]')?.value || null,
                address: document.getElementById('address').value
            };

            const response = await fetch('/placeOrder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ formData })
            });
            console.log("response",response)
           
            const result = await response.json();
            console.log('result',result)
            if (result.status === 404) {
                return Swal.fire({
                    icon: 'warning',
                    title: result.message,
                    timer: 3000, 
                    showConfirmButton: false, 
                    timerProgressBar: true, 
                })
            }
            if (result.status === 400) {
                return Swal.fire({
                    icon: 'warning',
                    title: result.message,
                    timer: 4000, 
                    showConfirmButton: false, 
                    timerProgressBar: true, 
                    willClose: () => {
                        window.location.href = '/shop';
                    }
                })
            }

            if (!result.success) {
                return Swal.fire({
                    icon: 'error',
                    title: 'Order Failed',
                    text: result.message || 'An error occurred while placing your order.'
                });
            }

            // Redirect to success page
            window.location.href = `/orderPlaced/?orderId=${result.orderId}`;

        } catch (error) {
            console.error('Error processing payment:', error);
            Swal.fire({
                icon: 'error',
                title: 'Payment Error',
                text: 'An error occurred while processing your payment. Please try again.',
                confirmButtonText: 'Okay',
                confirmButtonColor: '#007bff'
            });
        }
    }

        async function startRazorpayPayment() {
            console.log("entred")
            try {
                const finalAmount = Number(document.getElementById('final').innerText.replace('â‚¹', '').replace(',', ''));
                const totalPrice = document.getElementById('SubTotal').innerText.replace('â‚¹', '').replace(',', '')
                
                const discount = document.getElementById('discount').textContent.replace(/[^0-9.-]+/g, "");
                const formData = {
                    selectedAddress: document.querySelector('input[name="selectedAddress"]:checked').value,
                    payment_option: 'online',
                    discount: discount,
                    totalPrice: totalPrice,
                    finalAmount: finalAmount,
                    couponCode: document.getElementById('couponCode').value,
                    cartData: document.querySelector('input[name="cart"]').value || null,
                    singleProduct: document.querySelector('input[name="singleProduct"]')?.value || null,
                    singleProductId: document.querySelector('input[name="singleProductId"]')?.value || null,
                    singleProductQuantity: document.querySelector('input[name="singleProductQuantity"]')?.value || null,
                    address: document.getElementById('address').value
                };
                // console.log('form', formData)

                const orderResponse = await fetch('/placeOrder', {
                    method: 'POST',
                    headers: {

                        'Content-Type': 'application/json', 
                        
                    },
                    body: JSON.stringify({ formData }),
                });

                const orderData = await orderResponse.json();
                const orderId = orderData.orderId;
                
                if(orderData.status === 400){
                    return Swal.fire({
                        icon: 'warning',
                        title: orderData.message,
                        timer: 4000, 
                        showConfirmButton: false, 
                        timerProgressBar: true, 
                        willClose: () => {
                            window.location.href = '/shop';
                        }
                    })
                    // .then(()=>window.location.href='/shop')
                }
                if (!orderData.success) {
                    Swal.fire({
                        icon: 'error',
                        title: 'O',
                        text: 'Order failed due to an unknown error.',
                        confirmButtonText: 'Okay',
                        confirmButtonColor: '#007bff',
                        backdrop: true,
                    });

                }
                const paymentResponse = await fetch('/createPayment', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ amount: finalAmount }),
                });


                const paymentData = await paymentResponse.json();

                if (!paymentData.success) {
                    throw new Error('Failed to create Razorpay order.');
                }

                const options = {
                    key: "rzp_test_pgn7NyAMZL75UQ",
                    amount: finalAmount * 100,
                    currency: 'INR',
                    name: 'Gadget Verse',
                    description: 'Order Payment',
                    order_id: paymentData.orderId,
                    handler: async function (response) {
                        
                        try {
                            const paymentDetails = {
                                paymentId: response.razorpay_payment_id,
                                orderId: orderId,
                                status: "Completed",
                                razorpayId: response.razorpay_order_id,
                                signature: response.razorpay_signature,
                            };

                            const updateResponse = await fetch('/updatePayment', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify(paymentDetails),
                            });

                            const updateResult = await updateResponse.json();
                           
                            if (updateResponse && updateResult.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Payment Successful',
                                    text: 'Your payment has been processed successfully.',
                                    confirmButtonText: 'Okay',
                                    confirmButtonColor: '#007bff',
                                }).then(() => {
                                    window.location.href = `/orderPlaced/?orderId=${orderId}`;
                                })

                            } else {
                                throw new Error(updateResult.message || 'Payment status update failed.');
                            }
                        } catch (error) {
                            console.error('Error updating payment status:', error);

                            Swal.fire({
                                icon: 'error',
                                title: 'Payment Error',
                                text: error.message,
                                confirmButtonText: 'Okay',
                                confirmButtonColor: '#007bff',
                            });
                        }
                    },
                    prefill: {
                        name: "Your Name",
                        email: "your@example.com",
                        contact: "1234567890",
                    },
                    theme: {
                        color: "#39b4ac",
                    },
                    modal: {
                        ondismiss: async () => {
                            try {
                                await Swal.fire({
                                    icon: 'error',
                                    title: 'Payment Failed',
                                    text: 'Online payment failed',
                                    toast: true,
                                });


                                const response = await fetch('/ondismiss', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({ orderId: orderId }),
                                });
                                if (!response.ok) {
                                    throw new Error(`Failed to update stock: ${response.statusText}`);
                                }

                            } catch (error) {
                                console.error('Error during modal dismiss handling:', error);
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'Something went wrong while updating the stock.',
                                });
                            }
                        },
                    }

                };

                const razorpay = new Razorpay(options);
                razorpay.on('payment.failed', async function (response) {

                    Swal.fire({
                        icon: 'error',
                        title: 'Payment Failed',
                        text: 'The payment process failed. Please try again.',
                        confirmButtonColor: '#39b4ac',
                    });


                    try {
                        await fetch('/updatePayment', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({
                                orderId: orderId,
                                status: 'Payment Failed',
                                razorpayId: orderId,
                                signature: response.razorpay_signature
                            })
                        })
                        window.location.href = '/?paymentStatus=failed';
                    } catch (error) {
                        console.error("Error updating order to 'Payment Failed':", error);
                    }

                    console.error("Payment failed:", response.error);
                });

                razorpay.open();
                
            } catch (error) {
                console.error('Error initiating Razorpay payment:', error);

                Swal.fire({
                    icon: 'error',
                    title: 'Online Payment Error',
                    text: error.message,
                    confirmButtonText: 'Okay',
                    confirmButtonColor: '#007bff',
                    backdrop: true,
                });
            }
        }

       

    </script>
    <%- include("../../views/partials/user/footer") %>