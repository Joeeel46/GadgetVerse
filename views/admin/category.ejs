<%- include('../partials/admin/header') %>
<section class="content-main">
    <div class="content-header">
        <div>
            <h2 class="content-title card-title">Categories</h2>
            <p>Add, edit, or delete a category</p>
        </div>
        <div>
            <input type="text" placeholder="Search Categories" class="form-control bg-white">
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-3">
                    <form id="categoryForm" method="post" action="/admin/addCategory">
                        <div id="errorMessage" class="alert alert-danger d-none"></div>
                        <div id="successMessage" class="alert alert-success d-none"></div>
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Name</label>
                            <input type="text" placeholder="Type here" class="form-control" id="product_name" name="name" />
                        </div>
                        <div class="mb-4">
                            <label class="form-label">Description</label>
                            <textarea placeholder="Type here" class="form-control" id="descriptionId" name="description"></textarea>
                        </div>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Create category</button>
                        </div>
                    </form>
                </div>
                <div class="col-md-9">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Description</th>
                                    <th>Offer Price</th>
                                    <th>Offer</th>
                                    <th>Status</th>
                                    <th>List/Unlist</th>
                                    <th class="text-end">Edit</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% cat.reverse().forEach((category, index) => { %>
                                    <tr>
                                        <td class="text-start"><%= category.name %></td>
                                        <td class="text-start"><%= category.description %></td>
                                        <td>
                                            <% if (category.categoryOffer) { %>
                                                <%= category.categoryOffer %>%
                                            <% } else { %>
                                                0%
                                            <% } %>
                                        </td>
                                        <td class="text-start">
                                            <% if (category.categoryOffer === 0) { %>
                                                <!-- Removed redundant <a> tag inside button -->
                                                <button class="btn btn-info text-white" style="width: 100px" onclick="addOffer('<%= category._id %>')">Add Product</button>
                                            <% } else { %>
                                                <button class="btn btn-info text-white" style="width: 100px" onclick="removeOffer('<%= category._id %>')">Remove</button>
                                            <% } %>
                                        </td>
                                        <td class="text-start">
                                            <% if (category.isListed) { %>
                                                <span class="badge rounded-pill alert-success" style="width: 60px">Listed</span>
                                            <% } else { %>
                                                <span class="badge rounded-pill alert-danger" style="width: 60px">Unlisted</span>
                                            <% } %>
                                        </td>
                                        <td class="text-start">
                                            <% if (category.isListed) { %>
                                                <!-- Fixed unclosed <td> tag -->
                                                <a href="/admin/listCategory?id=<%= category._id %>" class="btn btn-danger text-white" style="width: 70px">Unlist</a>
                                            <% } else { %>
                                                <a href="/admin/unlistCategory?id=<%= category._id %>" class="btn btn-success text-white" style="width: 70px">List</a>
                                            <% } %>
                                        </td>
                                        <td class="text-start">
                                            <a href="/admin/editCategory?id=<%=category._id%>" class="btn btn-info text-white">Edit</a>
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>                            
                        </table>
                    </div>
                </div>
            </div>
            <!-- .row // -->
        </div>
        <!-- card body .// -->
    </div>
    
  
</section>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
document.getElementById('categoryForm').addEventListener('submit', function (e) {
    e.preventDefault(); // Prevent default form submission

    const nameInput = document.getElementById('product_name');
    const descriptionInput = document.getElementById('descriptionId');
    const errorMessage = document.getElementById('errorMessage');
    const successMessage = document.getElementById('successMessage');

    // Clear previous messages
    errorMessage.classList.add('d-none');
    successMessage.classList.add('d-none');
    errorMessage.innerHTML = '';
    successMessage.innerHTML = '';

    let hasError = false;

    // Validate name
    if (!nameInput.value.trim()) {
        hasError = true;
        errorMessage.innerHTML += '<p>Name is required.</p>';
    }

    // Validate description
    if (!descriptionInput.value.trim()) {
        hasError = true;
        errorMessage.innerHTML += '<p>Description is required.</p>';
    }

    if (hasError) {
        errorMessage.classList.remove('d-none');
        return; // Stop the form submission
    }

    // Submit the form using fetch
    const name = nameInput.value.trim();
    const description = descriptionInput.value.trim();

    fetch("/admin/addCategory", {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ name, description }),
    })
    .then(response => {
        if (!response.ok) {
            return response.json().then(err => {
                throw new Error(err.error);
            });
        }
        return response.json();
    })
    .then(data => {
        Swal.fire({
            icon: "success",
            title: "Category Added",
            text: "The category has been successfully added!",
        }).then(() => {
            location.reload(); // Reload the page after confirmation
        });
    })
    .catch(error => {
        if (error.message === "Category already exists") {
            Swal.fire({
                icon: "warning",
                title: "Duplicate Category",
                text: "Category already exists. Please try a different name.",
            });
        } else {
            Swal.fire({
                icon: "error",
                title: "Error",
                text: "An error occurred while adding the category. Please try again later.",
            });
        }
    });
});

async function addOffer(categoryId){
    const {value:amount} = await Swal.fire({
        title:"Offer in percentage",
        inputLabel:"Percentage",
        input:'number',
        inputPlaceholder:"%"
    })
    if (amount > 99 || amount < 1) {
        Swal.fire({
            icon: "warning",
            text: "Use from 1% to 99%"
        });
        return;
    }

    if(amount){
        try {
            const response = await fetch("/admin/addCategoryOffer", {
                method:"POST",
                headers:{
                    'content-type':"application/json"
                },
                body:JSON.stringify({
                    percentage:amount,
                    categoryId:categoryId
                })

            });

            const data = await response.json()
            if(response.ok && data.status == true){
                Swal.fire(
                    "Offer added",
                    "The offer has been added",
                    "success"
                ).then(()=> {
                    location.reload()
                })
            }else{
                Swal.fire("Failed",data.message || "Adding offer failed", "error")
            }
        } catch (error) {
            Swal.fire(
                "Error",
                "An error occured while adding the offer",
                "error"
            )
            console.log("Error adding offer",error)
        }
    }
}



async function removeOffer(categoryId) {
    try {
        const response = await fetch("/admin/removeCategoryOffer", {
            method:'POST',
            headers:{
                "content-type":"application/json"
            },
            body: JSON.stringify({
                categoryId:categoryId
            })
        })

        const data = await response.json()

        if(response.ok && data.status === true){
            Swal.fire(
                "Offer removed",
                "The offer has been removed",
                "success"
            ).then(()=>{
                location.reload()
            })
        }else {
            Swal.fire("Failed",data.message || "Removing offer failed","error")
        }

    } catch (error) {
        Swal.fire(
            "Error",
            "An error occured while removing the offer",
            "error"
        )
        console.log("Error removing offer",error)
    }
}

</script>



    <%- include('../partials/admin/footer') %>