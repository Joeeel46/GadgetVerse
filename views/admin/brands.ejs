<%- include("../../views/partials/admin/header") %>

  <section class="content-main">
    <div class="content-header">
      <div>
        <h2 class="content-title card-title">Brands</h2>
        <p>Add, edit or delete a brand</p>
      </div>
      <div>
        <input type="text" placeholder="Search Brands" class="form-control bg-white">
      </div>
    </div>

    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-3">
            <form id="addBrandForm" enctype="multipart/form-data">
              <div class="mb-4">
                <label for="brand_name" class="form-label">Brand Name</label>
                <input type="text" name="name" placeholder="Type here" class="form-control" id="brand_name" required />
              </div>
              <div class="mb-4">
                <label for="brand_image" class="form-label">Brand Image</label>
                <div class="input-upload">
                  <img src="" alt="" id="preview" style="max-width: 100%; max-height: 150px;" />
                  <input
                    class="form-control border mt-2"
                    name="image"
                    type="file"
                    accept="image/*"
                    onchange="validateAndPreviewImage(event)"
                    required
                  />
                </div>
              </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="button" onclick="addBrand()">
                  Add Brand
                </button>
              </div>
            </form>
          </div>

          <div class="col-md-9">
            <div class="table-responsive">
              <table class="table table-hover align-middle">
                <thead class="table-light">
                  <tr>
                    <th class="text-start">Brand</th>
                    <th class="text-center">Logo</th>
                    <th class="text-center">Status</th>
                    <th class="text-center">Block/Unblock</th>
                    <th class="text-end">Action</th>
                  </tr>
                </thead>
                <tbody>
                  <% data.reverse().forEach((brand, index) => { %>
                    <tr id="brand-row-<%= brand._id %>">
                      <!-- Brand Name -->
                      <td class="text-start">
                        <%= brand.brandName %>
                      </td>
          
                      <!-- Brand Logo -->
                      <td class="text-center">
                        <div class="d-flex align-items-center justify-content-center"
                             style="width: 50px; height: 50px; border-radius: 50%; overflow: hidden;">
                          <img src="/uploads/re-image/<%= brand.brandImage[0] %>" 
                               alt="<%= brand.brandName %>"
                               class="img-fluid rounded-circle"
                               style="width: 100%; height: auto;" />
                        </div>
                      </td>
          
                      <!-- Status -->
                      <td class="text-center">
                        <span id="status-<%= brand._id %>" 
                              class="badge rounded-pill <%= brand.isBlocked ? 'bg-danger' : 'bg-success' %>" 
                              style="width: 70px;">
                          <%= brand.isBlocked ? 'Blocked' : 'Active' %>
                        </span>
                      </td>

                      <!-- Block/Unblock Button -->
                      <td class="text-center">
                        <button id="toggle-btn-<%= brand._id %>" 
                                class="btn <%= brand.isBlocked ? 'btn-success' : 'btn-danger' %> text-white btn-sm" 
                                style="width: 100px;" 
                                onclick="toggleBlock('<%= brand._id %>', '<%= brand.isBlocked %>')">
                          <%= brand.isBlocked ? 'Unblock' : 'Block' %>
                        </button>
                      </td>

                      <!-- Delete Button -->
                      <td class="text-end">
                        <button class="btn btn-danger text-white btn-sm" 
                                style="width: 100px;" 
                                onclick="deleteBrand('<%= brand._id %>')">
                          Delete
                        </button>
                      </td>
                    </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>
          </div>
          
        </div>
      </div>
    </div>

    <div class="pagination-area mt-15 mb-50">
      <nav aria-label="Page navigation example">
          <ul class="pagination justify-content-center">
              <% for (let i=1; i <=totalPages; i++) { %>
                  <li class="page-item <%= (i === currentPage) ? 'active' : '' %>">
                      <a class="page-link" href="?page=<%= i %>">
                          <%= i %>
                      </a>
                  </li>
                  <% } %>
          </ul>
      </nav>
  </div>
  </section>

  <script>

    // Function to toggle block/unblock
  function toggleBlock(id, isBlocked) {
    fetch(`/admin/${isBlocked ? 'unblockBrand' : 'blockBrand'}?id=` + id, {
      method: 'POST'
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        // Update UI
        const statusBadge = document.getElementById(`status-${id}`);
        const toggleBtn = document.getElementById(`toggle-btn-${id}`);
        
        if (data.isBlocked) {
          statusBadge.textContent = "Blocked";
          statusBadge.className = "badge rounded-pill bg-danger";
          toggleBtn.textContent = "Unblock";
          toggleBtn.className = "btn btn-success text-white btn-sm";
        } else {
          statusBadge.textContent = "Active";
          statusBadge.className = "badge rounded-pill bg-success";
          toggleBtn.textContent = "Block";
          toggleBtn.className = "btn btn-danger text-white btn-sm";
        }
        
        // Update onclick attribute dynamically
        toggleBtn.setAttribute("onclick", `toggleBlock('${id}', ${data.isBlocked})`);
      }
    })
    .catch(error => console.error("Error:", error));
  }

  // Function to delete a brand
  function deleteBrand(id) {
    // Use SweetAlert for confirmation
    Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, delete it!',
        cancelButtonText: 'Cancel',
        reverseButtons: true // This swaps the cancel and confirm buttons
    }).then((result) => {
        if (result.isConfirmed) {
            // Proceed with the DELETE request if confirmed
            fetch(`/admin/deleteBrand?id=` + id, {
                method: 'DELETE'
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // SweetAlert success
                    Swal.fire({
                        icon: 'success',
                        title: 'Deleted!',
                        text: 'The brand has been deleted successfully.',
                        confirmButtonText: 'OK',
                    });

                    // Remove the row dynamically
                    document.getElementById(`brand-row-${id}`).remove();
                } else {
                    // SweetAlert error
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong. The brand could not be deleted.',
                        confirmButtonText: 'Try Again',
                    });
                }
            })
            .catch(error => {
                console.error("Error:", error);
                
                // SweetAlert error for network issues or other errors
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred. Please try again later.',
                    confirmButtonText: 'OK',
                });
            });
        }
    });
}

    function validateAndPreviewImage(event) {
  const file = event.target.files[0];
  const preview = document.getElementById("preview");

  if (!file) {
    Swal.fire({
      icon: "error",
      title: "No File Selected",
      text: "Please select an image file to upload.",
      confirmButtonText: "OK"
    });
    return;
  }

  const allowedTypes = ["image/jpeg", "image/png", "image/gif", "image/webp"];
  if (!allowedTypes.includes(file.type)) {
    Swal.fire({
      icon: "error",
      title: "Invalid File Type",
      text: "Only image files (JPEG, PNG, GIF, WEBP) are allowed.",
      confirmButtonText: "OK"
    });
    event.target.value = ""; // Clear the file input
    preview.src = ""; // Clear the preview image
    return;
  }

  // Optionally, check the file size (e.g., max 5MB)
  const maxSizeInMB = 5;
  if (file.size > maxSizeInMB * 1024 * 1024) {
    Swal.fire({
      icon: "error",
      title: "File Too Large",
      text: `Please select an image smaller than ${maxSizeInMB} MB.`,
      confirmButtonText: "OK"
    });
    event.target.value = ""; // Clear the file input
    preview.src = ""; // Clear the preview image
    return;
  }

  // Preview the selected image
  preview.src = URL.createObjectURL(file);
}


    async function addBrand() {
    const form = document.getElementById("addBrandForm");
    const formData = new FormData(form);

    try {
      const response = await fetch("/admin/addBrand", {
        method: "POST",
        body: formData
      });

      const data = await response.json();

      if (response.ok) {
        Swal.fire({
          icon: "success",
          title: "Success",
          text: data.message || "Brand added successfully!",
          confirmButtonText: "OK"
        }).then(() => {
          window.location.reload(); // Reload the page or redirect as needed
        });
      } else {
        Swal.fire({
          icon: "error",
          title: "Error",
          text: data.message || "Something went wrong!",
          confirmButtonText: "OK"
        });
      }
    } catch (error) {
      Swal.fire({
        icon: "error",
        title: "Error",
        text: "An error occurred while adding the brand. Please try again!",
        confirmButtonText: "OK"
      });
    }
  }

    function previewImage(event) {
      const reader = new FileReader();
      reader.onload = function () {
        const output = document.getElementById('preview');
        output.src = reader.result;
      };
      reader.readAsDataURL(event.target.files[0]);
    }

    function confirmDelete(brandId) {
      Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, delete it!',
      }).then((result) => {
        if (result.isConfirmed) {
          // Redirect to the delete route
          window.location.href = `/admin/deleteBrand?id=${brandId}`;
        }
      });
    }
  </script>

  <%- include("../../views/partials/admin/footer") %>